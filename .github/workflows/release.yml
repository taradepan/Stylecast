name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version and create release
        id: version
        working-directory: ext/vscode-extension
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Set version type - patch for push triggers, user choice for manual
          if [ "${{ github.event_name }}" = "push" ]; then
            VERSION_TYPE="patch"
            echo "Push trigger detected, using patch version bump"
          else
            VERSION_TYPE="${{ inputs.version_type }}"
            echo "Manual trigger detected, using $VERSION_TYPE version bump"
          fi
          
          echo "Attempting $VERSION_TYPE bump..."
          
          # Try to bump version
          npm version $VERSION_TYPE --no-git-tag-version
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          
          if [ "$CURRENT_VERSION" = "$NEW_VERSION" ]; then
            echo "⚠️  No version change detected for $VERSION_TYPE bump."
            echo "Current version: $CURRENT_VERSION"
            echo "Try using 'minor' or 'major' instead."
            exit 1
          fi
          
          echo "📦 Successfully bumped from $CURRENT_VERSION to $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and tag
        run: |
          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          git add ext/vscode-extension/package.json
          git commit -m "chore: bump version to $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"

      - name: Summary
        run: |
          NEW_VERSION="${{ steps.version.outputs.new_version }}"
          echo "### ✨ Release v$NEW_VERSION created!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The 'Publish Extension' workflow will now automatically publish to marketplaces." >> $GITHUB_STEP_SUMMARY
